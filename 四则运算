from fractions import Fraction   #fraction:分数，即在此导入分数模块
import random      #用于随机生成题目

#整数四则运算
def newint():
    fh = ['＋', '－', '×', '÷']
    k = random.randint(0, 3)  #随机生成0到3内的整数,用于fh的下标
    n1 = random.randint(0, 100)
    n2 = random.randint(0, 100)
    result = 0   #存运算结果
    if k == 0:
        result = n1 + n2
    elif k == 1:
        n1, n2 = max(n1, n2), min(n1, n2)
        result = n1 - n2
    elif k == 2:
        result = n1 * n2
    elif k == 3:
        while n2 == 0 or float(n1/n2)*1000%10!=0:  #分母不能为0,运算结果控制在2位小数内。
            n1 = random.randint(0, 100)
            n2 = random.randint(0, 100)
        result = float(n1 / n2)
    print(n1, fh[k], n2, '= ', end='')
    return result

#分数四则运算
def newfra():
    fh = ['＋', '－', '×', '÷']
    k = random.randint(0, 3)
    t1 = random.randint(1,20)
    t2 = random.randint(t1, 20)  #做分母，控制为真分数
    n1 = Fraction(t1, t2)   #即表示n1为分数
    t1 = random.randint(1, 20)
    t2 = random.randint(t1, 20)
    n2 = Fraction(t1, t2)
    result = 0
    if k == 0:
        result = n1 + n2
    elif k == 1:
        n1, n2 = max(n1, n2), min(n1, n2)
        result = n1 - n2
    elif k == 2:
        result = n1 * n2
    elif k == 3:
        result = n1 / n2
    print(n1, fh[k], n2, '= ', end='')
    return result

#newtest()函数是要求用户输入一个整数来输出算式的数量，采用while循环随机生成整数或者真分数运算，
# 将答案保存在result列表的同时输出算式直到算式数量达到要求。最后输出result列表即输出答案。
def newtest():
    fh = ['＋', '－', '×', '÷']
    print('输入题库所需要的题目数量')
    n=int(input())
    result=[]
    m=0
    while m<=(n-1):
        k = random.randint(0, 4)
        if k==0:
            print(m+1,end='、')
            result.append(newfra())
            print(' ')
        else:
            print(m+1,end='、')
            result.append(newint())
            print(' ')
        m=m+1
    m=0
    print('答案：')
    while m<=(n-1):
        print(m+1,'、',result[m])
        m=m+1

#下列为主函数，第一个模式负责调用上述newint()、new函数，
# 并获得函数返回值即算式答案，与用户输入值进行比较。第二个模式则是生成算式题目。
print('请选择需要进行的操作（输入数字代号）')
print('1、四则运算')
print('2、制作题库')
n=int(input())
if n==1:
    print('input "0000" to Quit')
    while True:
        k = random.randint(0, 1)  #0表示真分数的运算，1表示整数的运算
        if k == 0:
            result = newfra()
            jg = input()
            if jg == '0000':
                break;
            sr = Fraction(jg)  #化为分数形式
            if sr == result: #检测输入（sr）的答案与正确答案是否一致
                print('right')
            else:
                print('error. the Tight answer is', result)
        else:
            result = newint()
            jg = input()
            if jg == '0000':
                break;
            sr = float(jg)
            if sr == result:
                print('right')
            else:
                print('error. the Tight answer is', result)
if n==2:
    newtest()
